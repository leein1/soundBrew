buildscript{
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.soundbrew'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

allprojects {
    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
}

dependencies {
    implementation 'com.github.iamport:iamport-rest-client-java:0.2.21'


    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    // https://mvnrepository.com/artifact/org.projectlombok/lombok

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //테스트시 lombok 사용을 위한 라이브러리 설정
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    // 테스트시 junit, localstack을 사용하기 위한 라이브러리 설정
//    testImplementation 'org.testcontainers:junit-jupiter:1.17.6'
//    testImplementation 'org.testcontainers:localstack:1.17.6'

    //thymeleaf 레이아웃을 위한 라이브러리
    implementation group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '3.1.0'

    //https://mvnrepository.com/artifact/org.modelmapper/modelmapper
    implementation 'org.modelmapper:modelmapper:3.1.0'

    //서버에서 검증 후 등록하는 방식을 위한 validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //  메일 전송

    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // 아마존 aws s3
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.167'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    //  swaggerUI
    // https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
//    implementation 'io.springfox:springfox-swagger-ui:3.0.0'

    // https://mvnrepository.com/artifact/io.springfox/springfox-boot-starter
//    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    implementation 'org.springdoc:springdoc-openapi-ui:1.6.15' // 최신 버전 사용
    implementation 'org.springdoc:springdoc-openapi-webmvc-core:1.6.15'

    //QueryDSL
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"

    // JSON처리
    implementation 'com.google.code.gson:gson:2.8.9'

    //  jjwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    //스트리밍 관련 파일 읽기
    implementation 'javazoom:jlayer:1.0.1'


    annotationProcessor(
            "javax.persistence:javax.persistence-api",
            "javax.annotation:javax.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jpa"
    )
}

tasks.named('test') {
    useJUnitPlatform()
}

//sourceSets{
//    main{
//        java{
//            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
//        }
//    }
//}
def generatedDir = "$buildDir/generated/querydsl"

sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$generatedDir"]
        }
    }
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(generatedDir)
}
